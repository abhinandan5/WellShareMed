'use client';
import { useEffect, useState } from 'react';
import jsPDF from 'jspdf';
import { motion } from 'framer-motion';
import { FiDownload, FiEdit2, FiTrash2, FiAward } from 'react-icons/fi';

export default function DonationsDashboard() {
  const [donations, setDonations] = useState([]);
  const [certificates, setCertificates] = useState([]);

  useEffect(() => {
    // Mock data; replace with real API later
    setDonations([
      {
        id: 1,
        medicine: 'Paracetamol - 10 Tablets',
        city: 'Delhi',
        date: '2025-06-01',
        donorName: 'Abhinandan Jindal',
        status: 'Delivered'
      },
      {
        id: 2,
        medicine: 'Amoxicillin - 2 Bottles',
        city: 'Raipur',
        date: '2025-06-04',
        donorName: 'Abhinandan Jindal',
        status: 'In Transit'
      }
    ]);
    setCertificates([
      {
        id: 101,
        donationId: 1,
        title: 'Paracetamol Donation',
        date: '2025-06-01',
        downloadCount: 2
      },
      {
        id: 102,
        donationId: 2,
        title: 'Amoxicillin Donation',
        date: '2025-06-04',
        downloadCount: 0
      }
    ]);
  }, []);

  const generateCertificate = (donation) => {
    const doc = new jsPDF({
      orientation: 'landscape',
      unit: 'pt',
      format: 'a4'
    });

    // Certificate border
    doc.setDrawColor(0);
    doc.setLineWidth(2);
    doc.rect(20, 20, 800, 550, 'S');

    // Header
    doc.setFontSize(28);
    doc.setTextColor(40, 40, 100);
    doc.text('HelpRx.org - Certificate of Donation', 220, 80);

    // Content
    doc.setFontSize(16);
    doc.setTextColor(80, 80, 80);
    doc.text('This is to proudly certify that', 300, 140);

    doc.setFontSize(22);
    doc.setTextColor(20, 20, 20);
    doc.setFont('helvetica', 'bold');
    doc.text(donation.donorName, 300, 180);

    doc.setFontSize(14);
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(60, 60, 60);
    doc.text(
      `Has donated "${donation.medicine}" on ${donation.date} in ${donation.city}.`,
      180,
      220
    );
    doc.text(
      'Your contribution helps save lives and support those in need.',
      220,
      250
    );

    // Footer
    doc.setTextColor(100, 100, 100);
    doc.setFontSize(10);
    doc.text('Generated by HelpRx.org â€¢ Thank you for being a hero!', 280, 500);

    // Signature line
    doc.setFont('helvetica', 'italic');
    doc.setTextColor(80, 80, 80);
    doc.text('Founder, HelpRx.org', 650, 470);
    doc.line(630, 460, 780, 460);

    // Stamp (mocked)
    doc.setDrawColor(255, 0, 0);
    doc.setFillColor(255, 100, 100);
    doc.circle(120, 460, 40, 'FD');
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(12);
    doc.setFont('helvetica', 'bold');
    doc.text('HelpRx', 97, 460);
    doc.setFontSize(8);
    doc.text('Certified', 100, 472);

    // Update download count (frontend only)
    setCertificates((certs) =>
      certs.map((cert) =>
        cert.donationId === donation.id
          ? { ...cert, downloadCount: cert.downloadCount + 1 }
          : cert
      )
    );

    doc.save(`Donation_Certificate_${donation.id}.pdf`);
  };

  return (
    <section className="relative bg-gradient-to-br from-green-50 via-teal-50 to-emerald-50 overflow-hidden min-h-screen pb-16">
      {/* Animated Blobs */}
      <div className="absolute top-16 left-8 w-72 h-72 bg-green-200 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob"></div>
      <div className="absolute top-48 right-16 w-80 h-80 bg-teal-200 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-2000"></div>
      <div className="absolute bottom-10 right-1/3 w-96 h-96 bg-emerald-200 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-4000"></div>

      <div className="relative z-10 max-w-6xl mx-auto px-6 pt-8 pb-20">
        {/* Dashboard Title */}
        <motion.h1
          className="text-4xl md:text-5xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-green-600 to-teal-600 text-center mb-4"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8 }}
        >
          Your Donations
        </motion.h1>
        <motion.p
          className="text-center text-gray-700 text-lg mb-6"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          Manage your donations & certificates
        </motion.p>

        {/* Donations Table */}
        <motion.div
          className="bg-white rounded-2xl shadow-xl overflow-x-auto mb-5"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8 }}
        >
          <div className="px-6 py-4 border-b border-gray-200">
            <h2 className="text-xl font-semibold text-gray-800">
              Your Donations
            </h2>
          </div>
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-blue-50 text-gray-700 text-left text-sm font-semibold">
              <tr>
                <th className="px-6 py-3">Medicine</th>
                <th className="px-6 py-3">City</th>
                <th className="px-6 py-3">Date</th>
                <th className="px-6 py-3">Status</th>
                <th className="px-6 py-3">Actions</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-100">
              {donations.map((item) => (
                <motion.tr
                  key={item.id}
                  className="text-sm text-gray-800"
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  <td className="px-6 py-4">{item.medicine}</td>
                  <td className="px-6 py-4">{item.city}</td>
                  <td className="px-6 py-4">{item.date}</td>
                  <td className="px-6 py-4">
                    <span
                      className={`px-2 py-1 text-xs font-medium rounded-full ${
                        item.status === 'Delivered'
                          ? 'bg-green-100 text-green-800'
                          : item.status === 'In Transit'
                          ? 'bg-yellow-100 text-yellow-800'
                          : 'bg-red-100 text-red-800'
                      }`}
                    >
                      {item.status}
                    </span>
                  </td>
                  <td className="px-6 py-4 flex space-x-2">
                    <button className="flex items-center text-blue-600 hover:text-blue-800 p-1">
                      <FiEdit2 className="inline mr-1" /> Edit
                    </button>
                    <button className="flex items-center text-red-600 hover:text-red-800 p-1">
                      <FiTrash2 className="inline mr-1" /> Delete
                    </button>
                    <button
                      onClick={() => generateCertificate(item)}
                      className="flex items-center bg-green-500 hover:bg-green-600 text-white text-sm px-3 py-1 rounded transition"
                    >
                      <FiDownload className="inline mr-1" /> Certificate
                    </button>
                  </td>
                </motion.tr>
              ))}
              {donations.length === 0 && (
                <tr>
                  <td
                    colSpan="5"
                    className="text-center text-gray-500 py-6"
                  >
                    No donations yet.
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </motion.div>

        {/* Certificates Section */}
        <motion.div
          className="bg-white rounded-2xl shadow-xl overflow-x-auto"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          <div className="px-6 py-4 border-b border-gray-200 flex items-center">
            <FiAward className="text-yellow-500 mr-2" size={20} />
            <h2 className="text-xl font-semibold text-gray-800">
              Your Certificates
            </h2>
          </div>
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50 text-gray-700 text-left text-sm font-semibold">
              <tr>
                <th className="px-6 py-3">Certificate</th>
                <th className="px-6 py-3">Donation Date</th>
                <th className="px-6 py-3">Downloads</th>
                <th className="px-6 py-3">Actions</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-100">
              {certificates.map((cert) => {
                const donation = donations.find((d) => d.id === cert.donationId);
                return (
                  <motion.tr
                    key={cert.id}
                    className="text-sm text-gray-800"
                    initial={{ opacity: 0 }}
                    whileInView={{ opacity: 1 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5, delay: 0.1 }}
                  >
                    <td className="px-6 py-4 font-medium">{cert.title}</td>
                    <td className="px-6 py-4 text-gray-600">{cert.date}</td>
                    <td className="px-6 py-4">
                      <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs">
                        {cert.downloadCount} downloads
                      </span>
                    </td>
                    <td className="px-6 py-4">
                      <button
                        onClick={() => donation && generateCertificate(donation)}
                        className="flex items-center bg-blue-500 hover:bg-blue-600 text-white text-sm px-3 py-1 rounded transition"
                      >
                        <FiDownload className="inline mr-1" /> Download Again
                      </button>
                    </td>
                  </motion.tr>
                );
              })}
              {certificates.length === 0 && (
                <tr>
                  <td colSpan="4" className="text-center text-gray-500 py-6">
                    No certificates generated yet. Donate medicines to receive certificates.
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </motion.div>
      </div>

      {/* Blob Animation CSS */}
      <style jsx>{`
        @keyframes blob {
          0% {
            transform: translate(0px, 0px) scale(1);
          }
          33% {
            transform: translate(30px, -50px) scale(1.1);
          }
          66% {
            transform: translate(-20px, 20px) scale(0.9);
          }
          100% {
            transform: translate(0px, 0px) scale(1);
          }
        }
        .animate-blob {
          animation: blob 8s infinite;
        }
        .animation-delay-2000 {
          animation-delay: 2s;
        }
        .animation-delay-4000 {
          animation-delay: 4s;
        }
      `}</style>
    </section>
  );
}
